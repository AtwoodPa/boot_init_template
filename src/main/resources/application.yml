# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring:
  logging:
    level:
      org.springframework:
        security: trace
  thymeleaf:
    cache: false
  jackson:
    serialization:
      indent-output: true
  security:
    user:
      name: panpan
      password: 123123
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/init_db?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: root
    password: 123123123
    driver-class-name: com.mysql.cj.jdbc.Driver
    # Druid 数据源配置
    # druid 连接池管理
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      # connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#      web-stat-filter:
#        # 是否启用StatFilter默认值true
#        enabled: true
#        # 添加过滤规则
#        url-pattern: /*
#        # 忽略过滤的格式
#        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
#
#      stat-view-servlet:
#        # 是否启用StatViewServlet默认值true
#        enabled: true
#        # 访问路径为/druid时，跳转到StatViewServlet
#        url-pattern: /druid/*
#        # 是否能够重置数据
#        reset-enable: false
#        # 需要账号密码才能访问控制台，默认为root
#        login-username: druid
#        login-password: druid
#        # IP白名单
#        allow: 127.0.0.1
#        # IP黑名单（共同存在时，deny优先于allow）
#        deny:

# 下面这些内容是为了让 MyBatis 映射
mybatis:
  # 主键自增策略：uuid
  configuration:
    default-id-type: uuid
  mapper-locations: classpath:mapper/*xml
  type-aliases-package: com.pp.boot.domain.entity

# 应用服务 WEB 访问端口
server:
  port: 8080
  undertow:
    io-threads: 200
    worker-threads: 800
  servlet:
    # 应用的访问路径
    context-path:

panpan:
  name: panpan

ee-admin:
  name: EE
  version: v1.0.0




springdoc:
  api-docs:
    # 是否开启接口文档
    enabled: true
  #  swagger-ui:
  #    # 持久化认证数据
  #    persistAuthorization: true
  info:
    # 标题
    title: '标题：${ee-admin.name}管理系统_接口文档'
    # 描述
    description: '描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...'
    # 版本
    version: '版本号: ${ee-admin.version}'
    # 作者信息
    contact:
      name: pan
      email: supanpan199919@163.com
      url: https://github.com/AtwoodPa/boot_init_template
  components:
    # 鉴权方式配置
    security-schemes:
      apiKey:
        type: APIKEY
        in: HEADER
        name: ${sa-token.token-name}
  #这里定义了两个分组，可定义多个，也可以不定义
  group-configs:
    - group: 1.核心模块
      packages-to-scan: com.pp.boot.demos.web
    - group: 2.测试模块
      packages-to-scan: com.pp.boot.demos.test